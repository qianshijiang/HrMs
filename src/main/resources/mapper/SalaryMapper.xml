<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hrms.mapper.SalaryMapper">
    <resultMap id="BaseResultMap" type="com.hrms.entity.Salary" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="bonus" property="bonus" jdbcType="INTEGER" />
        <result column="lunchSalary" property="lunchSalary" jdbcType="INTEGER" />
        <result column="trafficSalary" property="trafficSalary" jdbcType="INTEGER" />
        <result column="basicSalary" property="basicSalary" jdbcType="INTEGER" />
        <result column="allSalary" property="allSalary" jdbcType="INTEGER" />
        <result column="pensionBase" property="pensionBase" jdbcType="INTEGER" />
        <result column="pensionPer" property="pensionPer" jdbcType="REAL" />
        <result column="createDate" property="createDate" jdbcType="TIMESTAMP" />
        <result column="medicalBase" property="medicalBase" jdbcType="INTEGER" />
        <result column="medicalPer" property="medicalPer" jdbcType="REAL" />
        <result column="accumulationFundBase" property="accumulationFundBase" jdbcType="INTEGER" />
        <result column="accumulationFundPer" property="accumulationFundPer" jdbcType="REAL" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="updateDate" property="updateDate" jdbcType="TIMESTAMP" />
    </resultMap>

    <insert id="addSalary" parameterType="com.hrms.entity.Salary">
            insert into salary (bonus, lunchSalary,
      trafficSalary, basicSalary,
      pensionBase, pensionPer, createDate,
      medicalBase, medicalPer, accumulationFundBase,
      accumulationFundPer, name,updateDate)
    values (#{salary.bonus,jdbcType=INTEGER}, #{salary.lunchSalary,jdbcType=INTEGER},
      #{salary.trafficSalary,jdbcType=INTEGER}, #{salary.basicSalary,jdbcType=INTEGER},
      #{salary.pensionBase,jdbcType=INTEGER}, #{salary.pensionPer,jdbcType=REAL}, #{salary.createDate,jdbcType=TIMESTAMP},
      #{salary.medicalBase,jdbcType=INTEGER}, #{salary.medicalPer,jdbcType=REAL}, #{salary.accumulationFundBase,jdbcType=INTEGER},
      #{salary.accumulationFundPer,jdbcType=REAL}, #{salary.name,jdbcType=VARCHAR},#{salary.updateDate,jdbcType=TIMESTAMP})
    </insert>
    <select id="getAllSalary" resultType="com.hrms.entity.Salary">
        SELECT * FROM salary;
    </select>
    <update id="updateSalary" parameterType="com.hrms.entity.Salary">
        update salary
        <set>
            <if test="salary.bonus != null">
                bonus = #{salary.bonus,jdbcType=INTEGER},
            </if>
            <if test="salary.lunchSalary != null">
                lunchSalary = #{salary.lunchSalary,jdbcType=INTEGER},
            </if>
            <if test="salary.trafficSalary != null">
                trafficSalary = #{salary.trafficSalary,jdbcType=INTEGER},
            </if>
            <if test="salary.basicSalary != null">
                basicSalary = #{salary.basicSalary,jdbcType=INTEGER},
            </if>
            <if test="salary.allSalary != null">
                allSalary = #{salary.allSalary,jdbcType=INTEGER},
            </if>
            <if test="salary.pensionBase != null">
                pensionBase = #{salary.pensionBase,jdbcType=INTEGER},
            </if>
            <if test="salary.pensionPer != null">
                pensionPer = #{salary.pensionPer,jdbcType=REAL},
            </if>
            <if test="salary.createDate != null">
                createDate = #{salary.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="salary.medicalBase != null">
                medicalBase = #{salary.medicalBase,jdbcType=INTEGER},
            </if>
            <if test="salary.medicalPer != null">
                medicalPer = #{salary.medicalPer,jdbcType=REAL},
            </if>
            <if test="salary.accumulationFundBase != null">
                accumulationFundBase = #{salary.accumulationFundBase,jdbcType=INTEGER},
            </if>
            <if test="salary.accumulationFundPer != null">
                accumulationFundPer = #{salary.accumulationFundPer,jdbcType=REAL},
            </if>
            <if test="salary.name != null">
                name = #{salary.name,jdbcType=VARCHAR},
            </if>
            <if test="salary.updateDate != null">
                updateDate = #{salary.updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{salary.id,jdbcType=INTEGER}
    </update>
    <delete id="deleteSalary">
        DELETE FROM salary WHERE id IN
        <foreach collection="ids" separator="," item="id" open="(" close=")">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteSalaryByEid">
        DELETE FROM empsalary WHERE eid=#{eid}
    </delete>
    <insert id="addSidAndEid">
        INSERT INTO empsalary set eid=#{eid},sid=#{sid}
    </insert>
</mapper>